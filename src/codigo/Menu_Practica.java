/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.awt.Graphics;
import java.io.File;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author jhony
 */
public class Menu_Practica extends javax.swing.JFrame {

    private String nameFich;
    private ArrayList<Punto> listaPuntos;
    private int valorMaximoX, valorMaximoY;
    /**
     * Creates new form Menu_Practica
     */
    public Menu_Practica() {
        initComponents();
        setTitle("Menu Principal");
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        //graph.setVisible(false);
        //opciones de abrir o generar datos
        this.listaPuntos = new ArrayList<>();
        
        //da fallo, mejor comentarlo
        /*this.mostrarOpciones();*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        homeContent = new javax.swing.JPanel();
        paramContent = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        opcionDatosCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        compararContent = new javax.swing.JPanel();
        comprobarContent = new javax.swing.JPanel();
        graphContent = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1500, 750));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));

        paramContent.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setLabelFor(this);
        jLabel1.setText("Datos:");

        jLabel2.setText("Algoritmo");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Exhaustivo", "Exhaustivo Poda", "D&V", "D&V Mejora", " " }));

        opcionDatosCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar...", "Cargar Fichero", "Generar Puntos", " " }));

        jLabel3.setText("CONFIGURACIÓN");

        javax.swing.GroupLayout paramContentLayout = new javax.swing.GroupLayout(paramContent);
        paramContent.setLayout(paramContentLayout);
        paramContentLayout.setHorizontalGroup(
            paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paramContentLayout.createSequentialGroup()
                .addGroup(paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paramContentLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(paramContentLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(132, 132, 132)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paramContentLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(149, 149, 149)
                                .addComponent(opcionDatosCB, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(paramContentLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel3)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        paramContentLayout.setVerticalGroup(
            paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paramContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(24, 24, 24)
                .addGroup(paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(opcionDatosCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(paramContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout homeContentLayout = new javax.swing.GroupLayout(homeContent);
        homeContent.setLayout(homeContentLayout);
        homeContentLayout.setHorizontalGroup(
            homeContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeContentLayout.createSequentialGroup()
                .addGap(447, 447, 447)
                .addComponent(paramContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(604, Short.MAX_VALUE))
        );
        homeContentLayout.setVerticalGroup(
            homeContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeContentLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(paramContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(342, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("HOME", homeContent);

        javax.swing.GroupLayout compararContentLayout = new javax.swing.GroupLayout(compararContent);
        compararContent.setLayout(compararContentLayout);
        compararContentLayout.setHorizontalGroup(
            compararContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1479, Short.MAX_VALUE)
        );
        compararContentLayout.setVerticalGroup(
            compararContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("COMPARAR", compararContent);

        javax.swing.GroupLayout comprobarContentLayout = new javax.swing.GroupLayout(comprobarContent);
        comprobarContent.setLayout(comprobarContentLayout);
        comprobarContentLayout.setHorizontalGroup(
            comprobarContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1479, Short.MAX_VALUE)
        );
        comprobarContentLayout.setVerticalGroup(
            comprobarContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("COMPROBAR", comprobarContent);

        javax.swing.GroupLayout graphContentLayout = new javax.swing.GroupLayout(graphContent);
        graphContent.setLayout(graphContentLayout);
        graphContentLayout.setHorizontalGroup(
            graphContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1479, Short.MAX_VALUE)
        );
        graphContentLayout.setVerticalGroup(
            graphContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("GRAPH", graphContent);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
//   
//    //mostrar menu para elegir opcion
//    public void mostrarOpciones(){
//        //String nameFich="";
//        int numPuntos=0;
//        int seleccion = JOptionPane.showOptionDialog( null,"Seleccione una opcion",
//        "Punto más cercano a otro",JOptionPane.YES_NO_CANCEL_OPTION,
//         JOptionPane.QUESTION_MESSAGE,null,// null para icono por defecto.
//        new Object[] { "Abrir datos", "Generar datos"},"Abrir datos");
//
//        if(seleccion == 0){//abrir datos
//            nameFich = this.AbrirDirectorio();
//            this.AbrirFichero(nameFich);
//        }else if(seleccion == 1){//generar datos
//            this.generarPuntos();
//        }
//        
//        /*if (seleccion != -1){
//                 System.out.println("seleccion: " + seleccion);
//        }*/
//    }
//     //Metodo abrir directorio
//    String AbrirDirectorio(){
//        String s="";
//        JFileChooser filChoose= new JFileChooser(System.getProperty("user.dir"));//Cogemos directorios desde /home
//        filChoose.setFileSelectionMode(JFileChooser.FILES_ONLY);//Solo acepta ficheros
//        filChoose.setFileFilter(new FileNameExtensionFilter("txt", "txt"));//Coje ficheros cuya extension sea esas
//        JFrame f=new JFrame();//Necesario, para poder hacer dispose()
//        if(filChoose.showOpenDialog(f)==JFileChooser.APPROVE_OPTION){
//            File file= filChoose.getSelectedFile();//Cogemos el fichero seleccionado
//            s=file.getName();
//        }
//        System.out.println("Nombre fichero: "+s);
//        return s;
//    }
//    //abrir fichero para cargar sus datos
//    public void AbrirFichero(String namefich){
//        //completar metodo
//        
//        //mostrar en el panel
//        this.mostrarPuntos();
//    }
    //generar puntos
//    public void generarPuntos(){
//        this.valorMaximoX = graph.getWidth();
//        this.valorMaximoY = graph.getHeight();
//        JTextField name = new JTextField();
//        JTextField puntos = new JTextField();
//        Object[] message = {
//            "Nombre fichero: ", name,
//            "Numero puntos: ", puntos
//        };
//
//        int option = JOptionPane.showConfirmDialog(null, message, "Generar puntos", JOptionPane.OK_CANCEL_OPTION);
//        this.nameFich = name.getText();
//        this.generarPuntos(Integer.parseInt(puntos.getText()));
//        
//        
//        //this.mostrarPuntos();
//    }
//    //generar puntos
//    public void generarPuntos(int numPuntos){
//        Graphics g = graph.getGraphics();
//        System.out.println("X: "+graph.getWidth()+" Y: "+graph.getHeight());
//        Punto p;
//        //p.dibujaPunto(g);
//        int x, y;
//        Random rnd = new Random();
//        //System.out.println("Nombrefich: "+this.nameFich+" Puntos: "+numPuntos);
//        for(int i=0; i<numPuntos; i++){
//            x = rnd.nextInt(this.valorMaximoX);
//            y = rnd.nextInt(this.valorMaximoY);
//            p = new Punto(x,y,i);
//            p.dibujaPunto(g);
//            listaPuntos.add(p);
//        }
        //p = new Punto(0,0,111);
        //p.dibujaPunto(g);
        ////p = new Punto(1354,670,112);
        ////p.dibujaPunto(g);
        //p = new Punto(1349,665,112);
        //p.dibujaPunto(g);
   // }
    //mostrar puntos
    public void mostrarPuntos(){
        //Graphics g = graph.getGraphics();
        System.out.println("puntos: "+this.listaPuntos.size());
        for (Punto p : listaPuntos) {
            //p.dibujaPunto(g);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Menu_Practica().setVisible(true);
                
                /*
                Object opcion = JOptionPane.showInputDialog(null,"Abrir fichero o generar uno?",
                "Punto más cercano a otro", JOptionPane.QUESTION_MESSAGE, null,
                new Object[] { "Seleccione","Abrir dato", "Generar datos"},"Seleccione");
                    int numero=Integer.parseInt((String) opcion);
                System.out.println(opcion.toString());

                System.out.println("opcion: "+opcion.hashCode());*/
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel compararContent;
    private javax.swing.JPanel comprobarContent;
    private javax.swing.JPanel graphContent;
    private javax.swing.JPanel homeContent;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> opcionDatosCB;
    private javax.swing.JPanel paramContent;
    // End of variables declaration//GEN-END:variables
}
