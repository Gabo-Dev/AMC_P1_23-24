/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jhony
 */
// Creamos clase donde almacenar datos del fichero analizado
class Fichero {

    public String nombre;
    public int dimension;

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public int getDimension() {
        return dimension;
    }

    public void setDimension(int dimension) {
        this.dimension = dimension;
    }

}

public class Menu_Practica extends javax.swing.JFrame {

    private ArrayList<Punto> listaPuntos;
    private int valorMaximoX, valorMaximoY;
    private Fichero ficheroActual;
    private boolean mismaX;
    private MostrarDatos tmp;

    /**
     * Creates new form Menu_Practica
     */
    public Menu_Practica() {
        initComponents();
        setTitle("Menu Principal");
        this.setLocationRelativeTo(null);
        this.listaPuntos = new ArrayList<>();
        ficheroActual = new Fichero();
        mismaX = false;
        //setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        tmp = new MostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        creaFicheroBtn = new javax.swing.JButton();
        cargarFicheroBtn = new javax.swing.JButton();
        comprobarEstrategiasBtn = new javax.swing.JButton();
        comparaBtn = new javax.swing.JButton();
        compara2Btn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        creaFicheroBtn.setText("Crear Fichero TSP aleatorio");
        creaFicheroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaFicheroBtnActionPerformed(evt);
            }
        });

        cargarFicheroBtn.setText("Cargar Fichero TSP");
        cargarFicheroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarFicheroBtnActionPerformed(evt);
            }
        });

        comprobarEstrategiasBtn.setText("Comprobar Estrategias");
        comprobarEstrategiasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobarEstrategiasBtnActionPerformed(evt);
            }
        });

        comparaBtn.setText("Comparar Estrategias");
        comparaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comparaBtnActionPerformed(evt);
            }
        });

        compara2Btn.setText("Comparar 2 Estrategias");
        compara2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compara2BtnActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(compara2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comparaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comprobarEstrategiasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creaFicheroBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarFicheroBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(324, 324, 324))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(creaFicheroBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cargarFicheroBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comprobarEstrategiasBtn)
                .addGap(18, 18, 18)
                .addComponent(comparaBtn)
                .addGap(18, 18, 18)
                .addComponent(compara2Btn)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creaFicheroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaFicheroBtnActionPerformed
        // TODO add your handling code here:
        try {
            int num = Integer.parseInt(JOptionPane.showInputDialog(null, "Tamaño del fichero:"));
            Punto aux = new Punto();
            if (num > 0) {
                ArrayList<Punto> Puntos = aux.generaPuntos(num, mismaX);
                creaFichero(num, Puntos);
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error no se puede crear el fichero");
        }
    }//GEN-LAST:event_creaFicheroBtnActionPerformed

    private void cargarFicheroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarFicheroBtnActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser filChoose = new JFileChooser(System.getProperty("user.dir"));//Cogemos directorios desde /home
            filChoose.setFileSelectionMode(JFileChooser.FILES_ONLY);//Solo acepta ficheros
            filChoose.setFileFilter(new FileNameExtensionFilter("txt", "txt"));//Coje ficheros cuya extension sea esas
            JFrame f = new JFrame();//Necesario, para poder hacer dispose()
            if (filChoose.showOpenDialog(f) == JFileChooser.APPROVE_OPTION) {
                File file = filChoose.getSelectedFile();//Cogemos el fichero seleccionado
                FileReader s = new FileReader(file);
                cargarPuntos(s);
            }
        } catch (HeadlessException | FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "No se pudede cargar el fichero");
        }
    }//GEN-LAST:event_cargarFicheroBtnActionPerformed

    private void comprobarEstrategiasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobarEstrategiasBtnActionPerformed
        // TODO add your handling code here:
        if (listaPuntos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar un fichero TSP primero.");
        } else {
            // Creamos una instancia para mostrar la comprobacion
            tmp = new MostrarDatos();
            tmp.setDatos(listaPuntos);
            tmp.setFichero(ficheroActual);
            tmp.setVisible(true);
            tmp.comprobarEstrategias();
            tmp.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_comprobarEstrategiasBtnActionPerformed

    private void comparaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comparaBtnActionPerformed
        // TODO add your handling code here:
        tmp = new MostrarDatos();
        tmp.comparaEstrategias(mismaX);
        tmp.setVisible(true);
        tmp.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_comparaBtnActionPerformed

    private void compara2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compara2BtnActionPerformed
        // TODO add your handling code here:
        // Crear un JComboBox con opciones
        // por defecto 
        String opc1, opc2;
        String[] options = {"Exhaustivo", "Exhaustivo Poda", "DyV", "DyV Mejorado"};
        JComboBox<String> comboBox = new JComboBox<>(options);

        // Crear un JPanel para contener el JComboBox
        JPanel panel = new JPanel();
        panel.add(new JLabel("Seleccione una opción:"));
        panel.add(comboBox);

        // Mostrar el diálogo
        int alg1 = JOptionPane.showOptionDialog(
                null,
                panel,
                "Comparar 2 Estrategias",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                null,
                null);

        // Verificar la opción seleccionada
        if (alg1 == JOptionPane.OK_OPTION) {
            // Obtener la opción seleccionada del JComboBox
            opc1 = comboBox.getSelectedItem().toString();
            //  Eliminamos primera opción elegida
            String[] aux = new String[options.length - 1];
            int j = 0;
            for (int i = 0; i < options.length; i++) {
                if (i != comboBox.getSelectedIndex()) {
                    aux[j] = options[i];
                    j++;
                }
            }
            comboBox = new JComboBox<>(aux);
            panel = new JPanel();
            panel.add(new JLabel("Seleccione una opción:"));
            panel.add(comboBox);
            // Mostrar el diálogo
            int alg2 = JOptionPane.showOptionDialog(
                    null,
                    panel,
                    "Comparar 2 Estrategias",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    null,
                    null);

            // Verificar la opción seleccionada
            if (alg2 == JOptionPane.OK_OPTION) {
                // Obtener la opción seleccionada del JComboBox
                opc2 = comboBox.getSelectedItem().toString();
                // Representamos las opciones elegidas
                tmp = new MostrarDatos();
                tmp.compara2(opc1, opc2,mismaX);
                tmp.setVisible(true);
                tmp.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            } else {
                // El usuario cerró el diálogo sin seleccionar ninguna opción
                JOptionPane.showMessageDialog(null, "No seleccionaste ninguna opción.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            // El usuario cerró el diálogo sin seleccionar ninguna opción
            JOptionPane.showMessageDialog(null, "No seleccionaste ninguna opción.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_compara2BtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Practica.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Practica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton cargarFicheroBtn;
    private javax.swing.JButton compara2Btn;
    private javax.swing.JButton comparaBtn;
    private javax.swing.JButton comprobarEstrategiasBtn;
    private javax.swing.JButton creaFicheroBtn;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables

    private void cargarPuntos(FileReader s) {
        int i = 0;
        BufferedReader entradaDatos;

        try {
            entradaDatos = new BufferedReader(s);
            String Linea = entradaDatos.readLine();
            boolean CordSection = false;
            while (!(Linea.equals("EOF"))) {

                if (CordSection) {
                    int a = -1, b = -1, c = -1, o = 0;
                    String[] parts = Linea.split(" ");
                    while (o < parts.length) {
                        if (!parts[o].isEmpty()) {
                            //  setID
                            if (a == -1) {
                                a = o;
                            } // set X
                            else if (b == -1) {
                                b = o;
                            } //  set Y
                            else if (c == -1) {
                                c = o;
                            }
                        }
                        o++;
                    }

                    listaPuntos.add(new Punto(Double.parseDouble(parts[b].trim()), Double.parseDouble(parts[c].trim()), Integer.parseInt(parts[a].trim())));
                }
                if (Linea.equals("NODE_COORD_SECTION")) {
                    CordSection = true;
                }
                if (Linea.contains("DIMENSION:")) {
                    String[] parts = Linea.split(" ");
                    ficheroActual.setDimension(Integer.parseInt(parts[1]));
                }
                if (Linea.contains("NAME:")) {
                    String[] parts = Linea.split(" ");
                    ficheroActual.setNombre(parts[1]);
                }
                Linea = entradaDatos.readLine();

            }
            entradaDatos.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void creaFichero(int num, ArrayList<Punto> puntos) {
        String filePath = "src/Data/dataset" + num + ".tsp";
        try ( BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
            writer.write("NAME: dataset" + num + "\n");
            writer.write(("TYPE: TSP\n"));
            writer.write("COMMENT: " + num + " random locations\n");
            writer.write("DIMENSION: " + num + "\n");
            writer.write("EDGE_WEIGHT_TYPE: EUC_2D\n");
            writer.write("NODE_COORD_SECTION\n");
            for (int i = 0; i < puntos.size(); i++) {
                writer.write((i + 1) + " " + puntos.get(i).getX() + " " + puntos.get(i).getY() + "\n");
            }
            writer.write("EOF");
        } catch (Exception e) {
        }
    }
}
